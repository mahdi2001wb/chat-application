<%- include('./partials/header.ejs'); %>
    <div id="chat-container">
      <div id="search-container">
        <input type="text" placeholder="Search" />
      </div>
      <div id="conversation-list">
        <% data.forEach(function(conversation) { %>
          <% if(conversation.creator.id == loggedInUser.userid) { %>
            <div class="conversation" onclick="getMessages('<%= conversation._id %>', '<%= conversation.participant.name %>')">
              <% if (conversation.participant.avatar) { %>
                <img src="./uploads/avatars/<%= conversation.participant.avatar %>" alt="<%= conversation.participant.name %>" />
              <% } else { %>
                <img src="./images/nophoto.png" />
              <% } %>
              <div class="title-text"><%= conversation.participant.name %></div>
              <div class="conversation-date"><%= moment(conversation.last_updated).fromNow() %></div>
            </div>
          <% } else { %>
            <div class="conversation" onclick="getMessages('<%= conversation._id %>', '<%= conversation.creator.name %>')">
              <% if (conversation.creator.avatar) { %>
                <img src="./uploads/avatars/<%= conversation.creator.avatar %>" alt="<%= conversation.creator.name %>" />
              <% } else { %>
                <img src="./images/nophoto.png" />
              <% } %>
              <div class="title-text"><%= conversation.creator.name %></div>
              <div class="conversation-date"><%= moment(conversation.last_updated).fromNow() %></div>
            </div>
          <% } %>
        <% }); %>
        
        <% if(data && data.length === 0) { %>
          <div class="nothing"><img src="./images/no-conversation.svg"></div>
        <% } %>
      </div>

      <div class="new-message-container" onclick="openModal()">
        <a href="#">+</a>
      </div>

      <div id="chat-title">
        <span id="conversation-partner"></span>
        <img src="./images/trash.png" alt="Delete Conversation" />
      </div>

      <div id="chat-message-list">
        <div class="nothing">select a conversation</div>
      </div>

      <form id="chat-form" method="post" enctype="multipart/form-data">
        <label for="attachment"><img src="./images/attachment.png" alt="Add Attachment" /></label>
        <input type="file" multiple name="attachment" class="hide" id="attachment" />
        <input type="text" name="message" placeholder="Type a message" autocomplete="off" />
      </form>

    </div>
    <%- include('./partials/add-conversation-modal.ejs'); %>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

    <script>
      const form = document.querySelector('#chat-form');
      const messageContainer = document.querySelector('#chat-message-list');
      const chatTitleContainer = document.querySelector('#conversation-partner');
      const loggedinUserId = '<%= loggedInUser.userid %>';
      let participant = null;
      let current_conversation_id;

      const socket = io('<%= process.env.APP_URL %>');

      // ✅ Toastify ফাংশন ঠিকমতো ডিফাইন করা হয়েছে
      const showToast = (message, type = "error") => {
        Toastify({
          text: message,
          duration: 3000,
          gravity: "top",
          position: "right",
          backgroundColor: type === "error" ? "#ff4b2b" : "#00b09b"
        }).showToast();
      };

      // ✅ নতুন মেসেজ রিসিভ হলে দেখাবে
      socket.on("new_message", data => {
        if(data.message.conversation_id == current_conversation_id) {
          const messageClass = data.message.sender.id === loggedinUserId ? 'you-message' : 'other-message';
          const senderAvatar = data.message.sender.avatar ? `<img src="./uploads/avatars/${data.message.sender.avatar}" alt="${data.message.sender.name}" />` : `<img src="./images/nophoto.png" />`;

          let attachments = '<div class="attachments">';
          if(data.message.attachment && data.message.attachment.length > 0) {
            data.message.attachment.forEach(attachment => {
              attachments += `<img src="./uploads/attachments/${attachment}" /> `;
            });
          }
          attachments += '</div>';

          let messageHTML = `
            <div class="message-row ${messageClass}">
              <div class="message-content">
                ${data.message.sender.id == loggedinUserId ? '' : senderAvatar}
                <div class="message-text">${data.message.message}</div>
                ${attachments}
                <div class="message-time">${moment(data.message.date_time).fromNow()}</div>
              </div>
            </div>`;

          document.querySelector('#chat-message-list > .message-row:first-child').insertAdjacentHTML('beforeBegin', messageHTML);
        }
      });

      async function getMessages(conversation_id, current_conversation_name) {
        let response = await fetch(`/inbox/messages/${conversation_id}`);
        const result= await response.json();

        if(!result.errors && result.data) {
          form.style.visibility = 'visible';
          const {data, conversation_id} = result;
          participant = data.participant;
          current_conversation_id = conversation_id;

          if(data.messages.length > 0) {
            let allMessages = '';
            data.messages.forEach((message) => {
              let senderAvatar = message.sender.avatar ? `./uploads/avatars/${message.sender.avatar}` : './images/nophoto.png';
              const messageClass = message.sender.id === loggedinUserId ? 'you-message' : 'other-message';
              const showAvatar = message.sender.id === loggedinUserId ? '' : `<img src="${senderAvatar}" alt="${message.sender.name}" />`;

              let attachments = '<div class="attachments">';
              if(message.attachment && message.attachment.length > 0) {
                message.attachment.forEach(attachment => {
                  attachments += `<img src="./uploads/attachments/${attachment}" /> `;
                });
              }
              attachments += '</div>';

              let messageHTML = `<div class="message-row ${messageClass}">
                  <div class="message-content">
                      ${showAvatar}
                      <div class="message-text">${message.text}</div>
                      ${attachments}
                      <div class="message-time">${moment(message.date_time).fromNow()}</div>
                  </div>
              </div>`;

              allMessages += messageHTML;
            });
            messageContainer.innerHTML = allMessages;
          } else {
            messageContainer.innerHTML = '<div class="message-row"></div>';
          }

          chatTitleContainer.textContent = current_conversation_name;
        } else {
          showToast("Error loading messages!");
        }
      }

      form.onsubmit = async function (event) {
        event.preventDefault();

        const formData = new FormData(form);
        formData.append('receiverId', participant.id);
        formData.append('conversationId', current_conversation_id);

        let response = await fetch("/inbox/message", { method: "POST", body: formData });
        let result = await response.json();

        if (!result.errors) {
          form.reset();
        } else {
          showToast("Error sending message!");
        }
      }
    </script>
  </body>
</html>
